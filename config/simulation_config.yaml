# simulation_config.yaml
# Main configuration for the Game Simulation Manager

# Maximum number of simulations to run in parallel.
# Defaults to the number of CPU cores if not specified.
max_concurrent_simulations: 4

# Predefined simulation types
simulation_templates:
  - id: "stockfish_elo_finder"
    name: "Stockfish ELO Finder"
    description: "Determines the ELO rating of the V7P3R engine by playing adaptive matches against Stockfish"
    type: "adaptive_elo"
    config:
      initial_elo: 1500
      min_elo: 800
      max_elo: 3200
      adjustment_factor: 1.0
      convergence_threshold: 0.05
      min_games_for_convergence: 20
      max_games: 100

simulations:
  # Simulation #1
  - name: "V7P3R vs. Stockfish (Skill 5)"
    games_to_run: 100 # Number of games to play with this configuration
    chess_game:
      white_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
      black_engine_config:
        engine: 'stockfish'
        # Stockfish settings are inside stockfish_config.yaml, but can be overridden
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: 'default_evaluation' # Default evaluation ruleset
        depth: 4
    stockfish_handler:
      stockfish_handler:
        skill_level: 5
  
  # Simulation #2
  - name: "V7P3R (Aggressive) vs. Stockfish (Skill 5)"
    games_to_run: 100 # Number of games to play with this configuration
    chess_game:
      white_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
      black_engine_config:
        engine: 'stockfish'
        # Stockfish settings are inside stockfish_config.yaml, but can be overridden
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: 'aggressive_evaluation'
        depth: 4
    stockfish_handler:
      stockfish_handler:
        skill_level: 5

  # Simulation #3
  - name: "V7P3R (Conservative) vs. V7P3R (Aggressive)"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'conservative_evaluation' # Can also be specified here
      black_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'aggressive_evaluation'
    v7p3r:
      # No overrides needed if we specify everything in chess_game config's engine_config
      # But we can override base engine parameters if we want
      v7p3r:
        depth: 3

  # Simulation #4
  - name: "V7P3R (Aggressive) vs. V7P3R (Conservative)"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'aggressive_evaluation' # Can also be specified here
      black_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'conservative_evaluation'
    v7p3r:
      # No overrides needed if we specify everything in chess_game config's engine_config
      # But we can override base engine parameters if we want
      v7p3r:
        depth: 3

  # Simulation #5
  - name: "V7P3R (Conservative) vs. Stockfish (Skill 5)"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'conservative_evaluation'
      black_engine_config:
        engine: 'stockfish'
    v7p3r:
      v7p3r:
        depth: 4
    stockfish_handler:
      stockfish_handler:
        skill_level: 5

  # Simulation #6
  - name: "Stockfish (Skill 5) vs. V7P3R"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'stockfish'
        engine_type: 'deepsearch'
      black_engine_config:
        engine: 'v7p3r'
        # V7P3R settings are inside v7p3r_config.yaml, but can be overridden
    v7p3r:
      stockfish_handler:
        stockfish_handler:
          skill_level: 5
  
  # Simulation #7
  - name: "Stockfish (Skill 5) vs. V7P3R (Aggressive)"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'stockfish'
      black_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'aggressive_evaluation'
    v7p3r:
      stockfish_handler:
        stockfish_handler:
          skill_level: 5

  # Simulation #8
  - name: "Stockfish (Skill 5) vs. V7P3R (Conservative)"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'stockfish'
      black_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'conservative_evaluation'
    v7p3r:
      stockfish_handler:
        stockfish_handler:
          skill_level: 5

  # Simulation #9
  - name: "V7P3R (Aggressive) vs. V7P3R (Aggressive)"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'aggressive_evaluation'
      black_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'aggressive_evaluation'
    v7p3r:
      v7p3r:
        depth: 4

  # Simulation #10
  - name: "V7P3R (Conservative) vs. V7P3R (Conservative)"
    games_to_run: 100
    chess_game:
      white_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'conservative_evaluation'
      black_engine_config:
        engine: 'v7p3r'
        engine_type: 'deepsearch'
        ruleset: 'conservative_evaluation'
    v7p3r:
      v7p3r:
        depth: 4