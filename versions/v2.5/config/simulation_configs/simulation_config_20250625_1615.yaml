# simulation_config.yaml
# Main configuration for the Game Simulation Manager

# Maximum number of simulations to run in parallel.
# Defaults to the number of CPU cores if not specified.
max_concurrent_simulations: 4

# Predefined simulation types
simulation_templates:
  - id: stockfish_elo_finder
    name: "Stockfish ELO Finder"
    description: "Determines the ELO rating of the v7p3r engine by playing adaptive matches against Stockfish"
    type: adaptive_elo
    config:
      initial_elo: 1500
      min_elo: 800
      max_elo: 3200
      adjustment_factor: 1.0
      convergence_threshold: 0.05
      min_games_for_convergence: 20
      max_games: 100

simulations:
  # Simulation #0 - Random Control
  - name: "v7p3r vs. v7p3r (Random)"
    games_to_run: 1 # Number of games to play with this configuration
    chess_game:
      white_engine_config:
        engine: v7p3r
      black_engine_config:
        engine: v7p3r_opponent
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        scoring_method: calculate_score     # Overrides the scoring method, v7p3r engine defaults to the inbuilt _v7p3r_scoring_calculation() function
        scoring_path: engine_utilities/v7p3r_scoring_calculation  # Import path to the scoring function, used for custom scoring methods, 
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: null_ruleset            # Name of the evaluation rule set to use, see below for available options
        scoring_method: calculate_score     # Overrides the scoring method, v7p3r engine defaults to the inbuilt _v7p3r_scoring_calculation() function
        scoring_path: engine_utilities/v7p3r_scoring_calculation  # Import path to the scoring function, used for custom scoring methods, 
        search_algorithm: random            # Move search type for White (see search_algorithms for options)
        depth: 0                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 1                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                          # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                # Enable move ordering for better performance
        quiescence: false                   # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 0.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false         # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)

  # Simulation #1
  - name: "v7p3r vs. Stockfish (Skill 5)"
    games_to_run: 1 # Number of games to play with this configuration
    chess_game:
      white_engine_config:
        engine: v7p3r
      black_engine_config:
        engine: stockfish
        # Stockfish settings are inside stockfish_config.yaml, but can be overridden
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      stockfish_handler:
        skill_level: 5
  
  # Simulation #2
  - name: "v7p3r vs. v7p3r (Aggressive)"
    games_to_run: 1 # Number of games to play with this configuration
    chess_game:
      white_engine_config:
        engine: v7p3r
      black_engine_config:
        engine: v7p3r_opponent
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: aggressive_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)

  # Simulation #3
  - name: "v7p3r vs. v7p3r (Conservative)"
    games_to_run: 1
    chess_game:
      white_engine_config:
        engine: v7p3r
      black_engine_config:
        engine: v7p3r_opponent
    v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: conservative_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)


  # Simulation #4
  - name: "v7p3r vs. v7p3r (Simple)"
    games_to_run: 1
    chess_game:
      white_engine_config:
        engine: v7p3r
      black_engine_config:
        engine: v7p3r_opponent
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: simple_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)

  # Simulation #5
  - name: "v7p3r vs. v7p3r (Default)"
    games_to_run: 1
    chess_game:
      white_engine_config:
        engine: v7p3r
      black_engine_config:
        engine: v7p3r_opponent
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)


  # Simulation #6
  - name: "Stockfish (Skill 5) vs v7p3r"
    games_to_run: 1 # Number of games to play with this configuration
    chess_game:
      white_engine_config:
        engine: stockfish
      black_engine_config:
        engine: v7p3r
        # Stockfish settings are inside stockfish_config.yaml, but can be overridden
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      stockfish_handler:
        skill_level: 5
  
  # Simulation #7
  - name: "v7p3r (Aggressive) vs. v7p3r"
    games_to_run: 1 # Number of games to play with this configuration
    chess_game:
      white_engine_config:
        engine: v7p3r_opponent
      black_engine_config:
        engine: v7p3r
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: aggressive_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)

  # Simulation #8
  - name: "v7p3r (Conservative) vs. v7p3r"
    games_to_run: 1
    chess_game:
      white_engine_config:
        engine: v7p3r_opponent
      black_engine_config:
        engine: v7p3r
    v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: conservative_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)


  # Simulation #9
  - name: "v7p3r (Simple) vs. v7p3r"
    games_to_run: 1
    chess_game:
      white_engine_config:
        engine: v7p3r_opponent
      black_engine_config:
        engine: v7p3r
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: simple_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)

  # Simulation #10
  - name: "v7p3r (Default) vs. v7p3r"
    games_to_run: 1
    chess_game:
      white_engine_config:
        engine: v7p3r_opponent
      black_engine_config:
        engine: v7p3r
    v7p3r:
      v7p3r: # Corresponds to the engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 5                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 8                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: true                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: true                           # Use piece-square tables for evaluation
        pst_weight: 1.5                     # Weight for piece-square table evaluation
        move_ordering: true                 # Enable move ordering for better performance
        quiescence: true                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.2               # Optional overall scoring multiplier/divider
        game_phase_awareness: true          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
      v7p3r_opponent: # Corresponds to the opponent engine name key in v7p3r_config.yaml
        ruleset: default_ruleset         # Name of the evaluation rule set to use, see below for available options
        search_algorithm: deepsearch        # Move search type for White (see search_algorithms for options)
        depth: 3                            # Depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        max_depth: 4                        # Max depth of search for AI, 1 for random, 2 for simple search, 3+ for more complex searches
        use_solutions: false                 # Use known positional solutions for evaluation (based on known puzzle solutions)
        pst: false                           # Use piece-square tables for evaluation
        pst_weight: 0.0                     # Weight for piece-square table evaluation
        move_ordering: false                 # Enable move ordering for better performance
        quiescence: false                    # Enable quiescence search for tactical positions
        time_limit: 0                       # Time limit for move calculation in milliseconds, 0 for no limit
        scoring_modifier: 1.0               # Optional overall scoring multiplier/divider
        game_phase_awareness: false          # Enable/disable game phase-specific evaluation (opening, middlegame, endgame)
